// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package utils

import (
	"database/sql"
	"github.com/go-playground/validator/v10"
	"github.com/hutamatr/GoBlogify/admin"
	"github.com/hutamatr/GoBlogify/category"
	"github.com/hutamatr/GoBlogify/comment"
	"github.com/hutamatr/GoBlogify/follow"
	"github.com/hutamatr/GoBlogify/post"
	"github.com/hutamatr/GoBlogify/post_image"
	"github.com/hutamatr/GoBlogify/role"
	"github.com/hutamatr/GoBlogify/user"
)

// Injectors from injector.go:

func InitializedRoleController(db *sql.DB, validator2 *validator.Validate) role.RoleController {
	roleRepository := role.NewRoleRepository()
	roleService := role.NewRoleService(roleRepository, db, validator2)
	roleController := role.NewRoleController(roleService)
	return roleController
}

func InitializedUserController(db *sql.DB, validator2 *validator.Validate) user.UserController {
	userRepository := user.NewUserRepository()
	roleRepository := role.NewRoleRepository()
	userService := user.NewUserService(userRepository, roleRepository, db, validator2)
	userController := user.NewUserController(userService)
	return userController
}

func InitializedAdminController(db *sql.DB, validator2 *validator.Validate) admin.AdminController {
	userRepository := user.NewUserRepository()
	roleRepository := role.NewRoleRepository()
	adminService := admin.NewAdminService(userRepository, roleRepository, db, validator2)
	adminController := admin.NewAdminController(adminService)
	return adminController
}

func InitializedPostController(db *sql.DB, validator2 *validator.Validate) post.PostController {
	postRepository := post.NewPostRepository()
	postImageRepository := post_image.NewPostImageRepository()
	postService := post.NewPostService(postRepository, postImageRepository, db, validator2)
	postController := post.NewPostController(postService)
	return postController
}

func InitializedCommentController(db *sql.DB, validator2 *validator.Validate) comment.CommentController {
	commentRepository := comment.NewCommentRepository()
	commentService := comment.NewCommentService(commentRepository, db, validator2)
	commentController := comment.NewCommentController(commentService)
	return commentController
}

func InitializedCategoryController(db *sql.DB, validator2 *validator.Validate) category.CategoryController {
	categoryRepository := category.NewCategoryRepository()
	categoryService := category.NewCategoryService(categoryRepository, db, validator2)
	categoryController := category.NewCategoryController(categoryService)
	return categoryController
}

func InitializedFollowController(db *sql.DB) follow.FollowController {
	followRepositories := follow.NewFollowRepository()
	followService := follow.NewFollowService(followRepositories, db)
	followController := follow.NewFollowController(followService)
	return followController
}
